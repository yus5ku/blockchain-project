import logging, sys, time
logging.basicConfig(level=logging.INFO, stream=sys.stdout)

class BlockChain:
    def __init__(self):
        self.transaction_pool = []
        self.chain = []
        self.create_block(0, 'init hash')

    def create_block(self, nonce, previous_hash):
        block = {
            'timestamp': time.time(),
            'transactions': self.transaction_pool.copy(),
            'nonce': nonce,
            'previous_hash': previous_hash
        }
        self.chain.append(block)
        self.transaction_pool = []
        return block

    def pprint(self):
        for i, block in enumerate(self.chain):
            print(f'{"="*25} Chain {i} {"="*25}')
            for k, v in block.items():
                print(f'{k:15}: {v}')
            print(f'{"*"*25}')

if __name__ == '__main__':
    bc = BlockChain()
    bc.create_block(5, 'hash1')
    bc.create_block(2, 'hash2')
    bc.pprint()
